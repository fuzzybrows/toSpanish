import sqlmodel

"""Initial version

Revision ID: c62d711d7c7a
Revises: 
Create Date: 2025-09-07 04:05:02.702752+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c62d711d7c7a'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('song',
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('language', sa.Enum('SPANISH', 'ENGLISH', 'YORUBA', 'IGBO', 'HAUSA', 'PIDGIN_ENGLISH', name='songlanguage'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_song_id'), 'song', ['id'], unique=False)
    op.create_table('user',
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_first_name'), 'user', ['first_name'], unique=False)
    op.create_index(op.f('ix_user_last_name'), 'user', ['last_name'], unique=False)
    op.create_table('verse',
    sa.Column('type', sa.Enum('VERSE', 'CHORUS', 'BRIDGE', 'INTRO', 'OUTRO', 'VAMP', name='versetype'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('song_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['song_id'], ['song.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_verse_id'), 'verse', ['id'], unique=False)
    op.create_table('line',
    sa.Column('english', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('spanish', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('yoruba', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('igbo', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('hausa', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('pidgin_english', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('verse_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['verse_id'], ['verse.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_line_id'), 'line', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_line_id'), table_name='line')
    op.drop_table('line')
    op.drop_index(op.f('ix_verse_id'), table_name='verse')
    op.drop_table('verse')
    op.drop_index(op.f('ix_user_last_name'), table_name='user')
    op.drop_index(op.f('ix_user_first_name'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_song_id'), table_name='song')
    op.drop_table('song')
    # ### end Alembic commands ###
